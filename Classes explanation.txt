Programming Project Classes
-------------------------------------------------------------------------------------------------
Elementi usati:
	1)GUI => JavaFX
	2)Logging => log-in/registrazione in AppPanel
	3)I/O file => per caricare/salvare
	4)Try/catch => per Input di file
	5)Abstract classes => Item
	6)Varargs => in AppPannel (per caricare gli oggetti)?
	7)Generic method => Items (per modificare un instant data, in base a quale si modifica si passa un parametro diverso T)
	8)Overriding => ??
	9)Overloading => ??
	10)Generic classes => ??
-------------------------------------------------------------------------------------------------

Colors:
	•Enum class
	•Type:
		White
		Black 
		Pink
		Blue 
		Red 
		Yellow 
		Green 
		Beige 
		Brown

---------------------------------

Seasons:
	•Enum class
	•Type:
		winter
		spring 
		summer 
		fall

---------------------------------

Occasions:
	•Enum class
	•Type:
		formal
		everyDay
		semiformal
		sporty

-------------------------------------------------------------------------------------------------

Items:
	•classe generica che identifica ogni capo presente nell’armadio
	•instants data:
		enum seasonOfItem
		enum occasionOfItem
		enum colorOfItem
		enum favourite
		boolean favourite
		Image picture
		String description
	•metodi:
		constructor con description 
		constructor senza description
		getters (try/catch x image)
		setters
		change (Stringa cosaCambia per switch, oggetto di tipo t che mi dice cosa cambia)

-----------------------------------------------

Top:
	•Sottoclasse item
	•instants data:
		enum class Type
			tShirt
			sweater
			sweatshirtAndHoodie
			topAndBody
			jacketAndCoat
			thankTop
		enum typeOfTop
	•metodi:
		constructor con descrizione
		constructor senza descrizione
		get typeOfTop 
		set typeOfTop (con switch)

-----------------------------------------------

Bottom:
	•Sottoclasse item
	•instants data:
		enum class Type
			skirt
			jeans
			trouser
			shorts
		enum typeOfBottom
	•metodi:
		constructor con descrizione
		constructor senza descrizione
		get typeOfBottom 
		set typeOfBottom (con switch)

-----------------------------------------------

Accessorize:
	•Sottoclasse item
	•instants data:
		enum class Type
			jewelry
			hat
			belt
			glasses
			scarf
			gloves
			purse
			shoes
			forTheHair 
		enum typeOfAccessorize 
	•metodi:
		constructor con descrizione
		constructor senza descrizione
		get typeOfAccessorize
		set typeOfAccessorize (con switch)

-------------------------------------------------------------------------------------------------

Outfit:
	•instants data:
		String name
		String description
		ArrayList <Item> items 
		enum Seasons seasonOfOutfit;
		enum occasionOfOutfit;
		enum colorOfOutfit;
	•metodi:
		constructor con descrizione
		constructor senza descrizione
		getters
		setters
		add item
		remove item

-------------------------------------------------------------------------------------------------

Wardrobe:
•carica items da file e poi contiene tutti gli item del’utente
•instants data:
		ArrayList <Item> items 
		ArrayList <Item> favourites 
		ArrayList <Outfit> outfits 
		String username
		String password
•metodi:
		constructor con file
		constructor senza file
		carica item da file
		getters
		setters
		add item
		remove item
		add outfit
		remove outfit

-------------------------------------------------------------------------------------------------

App:
	•gestisce loggin e poi apre l’armadio
	•instants data:
		file da userNameAndPsw
		ArrayList <Wardrobe> wardrobes 
	•metodi:
		constructor da file
		controlla user e psw
		crea nuovo utente (modifica file)
		cancella utente (modifica file)
		getters
		setters

-------------------------------------------------------------------------------------------------

AppPannel:
	•crea un oggetto App
	•metodi:
		Josephine

-------------------------------------------------------------------------------------------------

AppGUI:
	•crea un AppPannel e lo mostra
	•metodi (vedi CP project):
		start
		main

-------------------------------------------------------------------------------------------------

Test
	•??

